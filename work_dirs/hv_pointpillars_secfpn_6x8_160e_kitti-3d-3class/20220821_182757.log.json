{"env_info": "sys.platform: linux\nPython: 3.7.0 (default, Sep  2 2018, 01:08:31) [GCC 7.3.0]\nCUDA available: True\nGPU 0: Tesla P100-PCIE-12GB\nCUDA_HOME: /usr/local/cuda-10.1\nNVCC: Cuda compilation tools, release 10.1, V10.1.24\nGCC: gcc (GCC) 7.3.0\nPyTorch: 1.6.0+cu101\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2019.0.5 Product Build 20190808 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0+cu101\nOpenCV: 4.6.0\nMMCV: 1.6.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMDetection: 2.25.1\nMMSegmentation: 0.27.0\nMMDetection3D: 1.0.0rc4+unknown\nspconv2.0: False", "config": "voxel_size = [0.16, 0.16, 4]\nmodel = dict(\n    type='VoxelNet',\n    voxel_layer=dict(\n        max_num_points=32,\n        point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1],\n        voxel_size=[0.16, 0.16, 4],\n        max_voxels=(16000, 40000)),\n    voxel_encoder=dict(\n        type='PillarFeatureNet',\n        in_channels=4,\n        feat_channels=[64],\n        with_distance=False,\n        voxel_size=[0.16, 0.16, 4],\n        point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n    middle_encoder=dict(\n        type='PointPillarsScatter', in_channels=64, output_shape=[496, 432]),\n    backbone=dict(\n        type='SECOND',\n        in_channels=64,\n        layer_nums=[3, 5, 5],\n        layer_strides=[2, 2, 2],\n        out_channels=[64, 128, 256]),\n    neck=dict(\n        type='SECONDFPN',\n        in_channels=[64, 128, 256],\n        upsample_strides=[1, 2, 4],\n        out_channels=[128, 128, 128]),\n    bbox_head=dict(\n        type='Anchor3DHead',\n        num_classes=3,\n        in_channels=384,\n        feat_channels=384,\n        use_direction_classifier=True,\n        assign_per_class=True,\n        anchor_generator=dict(\n            type='AlignedAnchor3DRangeGenerator',\n            ranges=[[0, -39.68, -0.6, 69.12, 39.68, -0.6],\n                    [0, -39.68, -0.6, 69.12, 39.68, -0.6],\n                    [0, -39.68, -1.78, 69.12, 39.68, -1.78]],\n            sizes=[[0.8, 0.6, 1.73], [1.76, 0.6, 1.73], [3.9, 1.6, 1.56]],\n            rotations=[0, 1.57],\n            reshape_out=False),\n        diff_rad_by_sin=True,\n        bbox_coder=dict(type='DeltaXYZWLHRBBoxCoder'),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=2.0),\n        loss_dir=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.2)),\n    train_cfg=dict(\n        assigner=[\n            dict(\n                type='MaxIoUAssigner',\n                iou_calculator=dict(type='BboxOverlapsNearest3D'),\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.35,\n                min_pos_iou=0.35,\n                ignore_iof_thr=-1),\n            dict(\n                type='MaxIoUAssigner',\n                iou_calculator=dict(type='BboxOverlapsNearest3D'),\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.35,\n                min_pos_iou=0.35,\n                ignore_iof_thr=-1),\n            dict(\n                type='MaxIoUAssigner',\n                iou_calculator=dict(type='BboxOverlapsNearest3D'),\n                pos_iou_thr=0.6,\n                neg_iou_thr=0.45,\n                min_pos_iou=0.45,\n                ignore_iof_thr=-1)\n        ],\n        allowed_border=0,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        use_rotate_nms=True,\n        nms_across_levels=False,\n        nms_thr=0.01,\n        score_thr=0.1,\n        min_bbox_size=0,\n        nms_pre=100,\n        max_num=50))\ndataset_type = 'KittiDataset'\ndata_root = '/data/cmpe249-fa22/kitti/'\nclass_names = ['Pedestrian', 'Cyclist', 'Car']\npoint_cloud_range = [0, -39.68, -3, 69.12, 39.68, 1]\ninput_modality = dict(use_lidar=True, use_camera=False)\nfile_client_args = dict(backend='disk')\ndb_sampler = dict(\n    data_root='/data/cmpe249-fa22/kitti/',\n    info_path='/data/cmpe249-fa22/kitti/kitti_dbinfos_train.pkl',\n    rate=1.0,\n    prepare=dict(\n        filter_by_difficulty=[-1],\n        filter_by_min_points=dict(Car=5, Pedestrian=5, Cyclist=5)),\n    classes=['Pedestrian', 'Cyclist', 'Car'],\n    sample_groups=dict(Car=15, Pedestrian=15, Cyclist=15),\n    points_loader=dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=4,\n        use_dim=4,\n        file_client_args=dict(backend='disk')),\n    file_client_args=dict(backend='disk'))\ntrain_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=4,\n        use_dim=4,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadAnnotations3D',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='ObjectSample',\n        db_sampler=dict(\n            data_root='/data/cmpe249-fa22/kitti/',\n            info_path='/data/cmpe249-fa22/kitti/kitti_dbinfos_train.pkl',\n            rate=1.0,\n            prepare=dict(\n                filter_by_difficulty=[-1],\n                filter_by_min_points=dict(Car=5, Pedestrian=5, Cyclist=5)),\n            classes=['Pedestrian', 'Cyclist', 'Car'],\n            sample_groups=dict(Car=15, Pedestrian=15, Cyclist=15),\n            points_loader=dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=4,\n                use_dim=4,\n                file_client_args=dict(backend='disk')),\n            file_client_args=dict(backend='disk')),\n        use_ground_plane=True),\n    dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),\n    dict(\n        type='GlobalRotScaleTrans',\n        rot_range=[-0.78539816, 0.78539816],\n        scale_ratio_range=[0.95, 1.05]),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n    dict(\n        type='ObjectRangeFilter',\n        point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n    dict(type='PointShuffle'),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car']),\n    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ntest_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=4,\n        use_dim=4,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1333, 800),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[0, 0],\n                scale_ratio_range=[1.0, 1.0],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D'),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=['Pedestrian', 'Cyclist', 'Car'],\n                with_label=False),\n            dict(type='Collect3D', keys=['points'])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=4,\n        use_dim=4,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car'],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=6,\n    workers_per_gpu=4,\n    train=dict(\n        type='RepeatDataset',\n        times=2,\n        dataset=dict(\n            type='KittiDataset',\n            data_root='/data/cmpe249-fa22/kitti/',\n            ann_file='/data/cmpe249-fa22/kitti/kitti_infos_train.pkl',\n            split='training',\n            pts_prefix='velodyne_reduced',\n            pipeline=[\n                dict(\n                    type='LoadPointsFromFile',\n                    coord_type='LIDAR',\n                    load_dim=4,\n                    use_dim=4,\n                    file_client_args=dict(backend='disk')),\n                dict(\n                    type='LoadAnnotations3D',\n                    with_bbox_3d=True,\n                    with_label_3d=True,\n                    file_client_args=dict(backend='disk')),\n                dict(\n                    type='ObjectSample',\n                    db_sampler=dict(\n                        data_root='/data/cmpe249-fa22/kitti/',\n                        info_path=\n                        '/data/cmpe249-fa22/kitti/kitti_dbinfos_train.pkl',\n                        rate=1.0,\n                        prepare=dict(\n                            filter_by_difficulty=[-1],\n                            filter_by_min_points=dict(\n                                Car=5, Pedestrian=5, Cyclist=5)),\n                        classes=['Pedestrian', 'Cyclist', 'Car'],\n                        sample_groups=dict(Car=15, Pedestrian=15, Cyclist=15),\n                        points_loader=dict(\n                            type='LoadPointsFromFile',\n                            coord_type='LIDAR',\n                            load_dim=4,\n                            use_dim=4,\n                            file_client_args=dict(backend='disk')),\n                        file_client_args=dict(backend='disk')),\n                    use_ground_plane=True),\n                dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),\n                dict(\n                    type='GlobalRotScaleTrans',\n                    rot_range=[-0.78539816, 0.78539816],\n                    scale_ratio_range=[0.95, 1.05]),\n                dict(\n                    type='PointsRangeFilter',\n                    point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n                dict(\n                    type='ObjectRangeFilter',\n                    point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n                dict(type='PointShuffle'),\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=['Pedestrian', 'Cyclist', 'Car']),\n                dict(\n                    type='Collect3D',\n                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n            ],\n            modality=dict(use_lidar=True, use_camera=False),\n            classes=['Pedestrian', 'Cyclist', 'Car'],\n            test_mode=False,\n            box_type_3d='LiDAR',\n            file_client_args=dict(backend='disk'))),\n    val=dict(\n        type='KittiDataset',\n        data_root='/data/cmpe249-fa22/kitti/',\n        ann_file='/data/cmpe249-fa22/kitti/kitti_infos_val.pkl',\n        split='training',\n        pts_prefix='velodyne_reduced',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=4,\n                use_dim=4,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=['Pedestrian', 'Cyclist', 'Car'],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points'])\n                ])\n        ],\n        modality=dict(use_lidar=True, use_camera=False),\n        classes=['Pedestrian', 'Cyclist', 'Car'],\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk')),\n    test=dict(\n        type='KittiDataset',\n        data_root='/data/cmpe249-fa22/kitti/',\n        ann_file='/data/cmpe249-fa22/kitti/kitti_infos_val.pkl',\n        split='training',\n        pts_prefix='velodyne_reduced',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=4,\n                use_dim=4,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[0, -39.68, -3, 69.12, 39.68, 1]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=['Pedestrian', 'Cyclist', 'Car'],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points'])\n                ])\n        ],\n        modality=dict(use_lidar=True, use_camera=False),\n        classes=['Pedestrian', 'Cyclist', 'Car'],\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk')))\nevaluation = dict(\n    interval=2,\n    pipeline=[\n        dict(\n            type='LoadPointsFromFile',\n            coord_type='LIDAR',\n            load_dim=4,\n            use_dim=4,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=['Pedestrian', 'Cyclist', 'Car'],\n            with_label=False),\n        dict(type='Collect3D', keys=['points'])\n    ])\nlr = 0.001\noptimizer = dict(type='AdamW', lr=0.001, betas=(0.95, 0.99), weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='cyclic',\n    target_ratio=(10, 0.0001),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nmomentum_config = dict(\n    policy='cyclic',\n    target_ratio=(0.8947368421052632, 1),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nrunner = dict(type='EpochBasedRunner', max_epochs=3)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './work_dirs/hv_pointpillars_secfpn_6x8_160e_kitti-3d-3class'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\ngpu_ids = [0]\n", "seed": 0, "exp_name": "hv_pointpillars_secfpn_6x8_160e_kitti-3d-3class.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00101, "memory": 5668, "data_time": 0.37226, "loss_cls": 0.73182, "loss_bbox": 2.57312, "loss_dir": 0.14123, "loss": 3.44618, "grad_norm": 9.521, "time": 1.03933}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00104, "memory": 5679, "data_time": 0.00868, "loss_cls": 0.53465, "loss_bbox": 2.12392, "loss_dir": 0.13908, "loss": 2.79765, "grad_norm": 7.57802, "time": 0.66969}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00109, "memory": 5725, "data_time": 0.00861, "loss_cls": 0.45893, "loss_bbox": 1.98164, "loss_dir": 0.13823, "loss": 2.57879, "grad_norm": 6.26567, "time": 0.66878}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00115, "memory": 5725, "data_time": 0.00857, "loss_cls": 0.44011, "loss_bbox": 1.9045, "loss_dir": 0.13777, "loss": 2.48238, "grad_norm": 5.42626, "time": 0.66225}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00124, "memory": 5725, "data_time": 0.00857, "loss_cls": 0.41299, "loss_bbox": 1.75853, "loss_dir": 0.13679, "loss": 2.30831, "grad_norm": 6.7115, "time": 0.65607}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00134, "memory": 5725, "data_time": 0.00863, "loss_cls": 0.41271, "loss_bbox": 1.84436, "loss_dir": 0.13679, "loss": 2.39386, "grad_norm": 5.957, "time": 0.6617}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00146, "memory": 5725, "data_time": 0.00857, "loss_cls": 0.39511, "loss_bbox": 1.7362, "loss_dir": 0.13663, "loss": 2.26794, "grad_norm": 5.28759, "time": 0.66723}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.0016, "memory": 5725, "data_time": 0.00855, "loss_cls": 0.38736, "loss_bbox": 1.69478, "loss_dir": 0.13819, "loss": 2.22034, "grad_norm": 5.20727, "time": 0.66969}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00176, "memory": 5725, "data_time": 0.00855, "loss_cls": 0.3843, "loss_bbox": 1.72968, "loss_dir": 0.13653, "loss": 2.25051, "grad_norm": 5.1197, "time": 0.66458}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00193, "memory": 5725, "data_time": 0.00858, "loss_cls": 0.36914, "loss_bbox": 1.62165, "loss_dir": 0.13665, "loss": 2.12744, "grad_norm": 5.19883, "time": 0.66306}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00212, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.3666, "loss_bbox": 1.60545, "loss_dir": 0.13724, "loss": 2.10929, "grad_norm": 4.66886, "time": 0.65776}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00232, "memory": 5725, "data_time": 0.00858, "loss_cls": 0.36421, "loss_bbox": 1.6437, "loss_dir": 0.13669, "loss": 2.1446, "grad_norm": 4.97389, "time": 0.65805}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00254, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.35956, "loss_bbox": 1.67594, "loss_dir": 0.13624, "loss": 2.17174, "grad_norm": 4.69834, "time": 0.65608}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00276, "memory": 5725, "data_time": 0.0086, "loss_cls": 0.34932, "loss_bbox": 1.65145, "loss_dir": 0.13616, "loss": 2.13693, "grad_norm": 3.81749, "time": 0.66185}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.003, "memory": 5725, "data_time": 0.0086, "loss_cls": 0.35004, "loss_bbox": 1.59061, "loss_dir": 0.13649, "loss": 2.07713, "grad_norm": 3.72233, "time": 0.65882}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00326, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.36501, "loss_bbox": 1.6874, "loss_dir": 0.13619, "loss": 2.18861, "grad_norm": 3.43009, "time": 0.66198}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00352, "memory": 5725, "data_time": 0.0087, "loss_cls": 0.34967, "loss_bbox": 1.67492, "loss_dir": 0.13739, "loss": 2.16198, "grad_norm": 4.27083, "time": 0.65412}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00378, "memory": 5725, "data_time": 0.00883, "loss_cls": 0.34119, "loss_bbox": 1.5423, "loss_dir": 0.13587, "loss": 2.01935, "grad_norm": 2.83356, "time": 0.66021}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00406, "memory": 5725, "data_time": 0.0086, "loss_cls": 0.34322, "loss_bbox": 1.65462, "loss_dir": 0.13592, "loss": 2.13375, "grad_norm": 3.36972, "time": 0.66196}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00434, "memory": 5725, "data_time": 0.00857, "loss_cls": 0.33923, "loss_bbox": 1.59367, "loss_dir": 0.13646, "loss": 2.06936, "grad_norm": 2.94955, "time": 0.66152}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00463, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.34202, "loss_bbox": 1.62339, "loss_dir": 0.13663, "loss": 2.10204, "grad_norm": 2.7438, "time": 0.66275}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00492, "memory": 5725, "data_time": 0.00869, "loss_cls": 0.33086, "loss_bbox": 1.54773, "loss_dir": 0.13624, "loss": 2.01483, "grad_norm": 2.68766, "time": 0.65776}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00522, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.33314, "loss_bbox": 1.55182, "loss_dir": 0.13609, "loss": 2.02105, "grad_norm": 2.78309, "time": 0.66754}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00551, "memory": 5725, "data_time": 0.0086, "loss_cls": 0.33583, "loss_bbox": 1.59563, "loss_dir": 0.13634, "loss": 2.0678, "grad_norm": 2.3922, "time": 0.65824}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00581, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.33331, "loss_bbox": 1.54958, "loss_dir": 0.1367, "loss": 2.01959, "grad_norm": 2.29226, "time": 0.65889}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.0061, "memory": 5725, "data_time": 0.00858, "loss_cls": 0.33143, "loss_bbox": 1.60807, "loss_dir": 0.13631, "loss": 2.07581, "grad_norm": 2.17334, "time": 0.65328}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00639, "memory": 5725, "data_time": 0.0086, "loss_cls": 0.32708, "loss_bbox": 1.5337, "loss_dir": 0.13636, "loss": 1.99714, "grad_norm": 2.18098, "time": 0.66656}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00668, "memory": 5725, "data_time": 0.00867, "loss_cls": 0.31919, "loss_bbox": 1.52335, "loss_dir": 0.1359, "loss": 1.97844, "grad_norm": 2.29054, "time": 0.66405}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.00696, "memory": 5725, "data_time": 0.00857, "loss_cls": 0.32541, "loss_bbox": 1.50548, "loss_dir": 0.13632, "loss": 1.9672, "grad_norm": 2.00535, "time": 0.64768}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.00724, "memory": 5725, "data_time": 0.0086, "loss_cls": 0.32337, "loss_bbox": 1.5784, "loss_dir": 0.13562, "loss": 2.03739, "grad_norm": 2.07671, "time": 0.6637}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.00751, "memory": 5725, "data_time": 0.00859, "loss_cls": 0.32422, "loss_bbox": 1.51124, "loss_dir": 0.13563, "loss": 1.97109, "grad_norm": 1.93757, "time": 0.66358}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.00777, "memory": 5725, "data_time": 0.00858, "loss_cls": 0.30365, "loss_bbox": 1.46203, "loss_dir": 0.13575, "loss": 1.90142, "grad_norm": 1.73606, "time": 0.66138}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.00802, "memory": 5725, "data_time": 0.00869, "loss_cls": 0.32573, "loss_bbox": 1.48195, "loss_dir": 0.13503, "loss": 1.94271, "grad_norm": 1.77648, "time": 0.65876}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.00825, "memory": 5725, "data_time": 0.00858, "loss_cls": 0.3119, "loss_bbox": 1.54358, "loss_dir": 0.13483, "loss": 1.99031, "grad_norm": 1.85414, "time": 0.66023}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.00848, "memory": 5733, "data_time": 0.00858, "loss_cls": 0.30698, "loss_bbox": 1.4468, "loss_dir": 0.13499, "loss": 1.88877, "grad_norm": 1.58004, "time": 0.65766}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.0087, "memory": 5733, "data_time": 0.00861, "loss_cls": 0.31196, "loss_bbox": 1.50843, "loss_dir": 0.13584, "loss": 1.95624, "grad_norm": 1.54023, "time": 0.65391}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.0089, "memory": 5733, "data_time": 0.00858, "loss_cls": 0.30745, "loss_bbox": 1.5505, "loss_dir": 0.13611, "loss": 1.99406, "grad_norm": 1.62805, "time": 0.67173}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.00908, "memory": 5763, "data_time": 0.0086, "loss_cls": 0.31642, "loss_bbox": 1.5148, "loss_dir": 0.1355, "loss": 1.96672, "grad_norm": 1.47267, "time": 0.67016}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.00925, "memory": 5763, "data_time": 0.00864, "loss_cls": 0.31388, "loss_bbox": 1.50736, "loss_dir": 0.13599, "loss": 1.95723, "grad_norm": 1.5849, "time": 0.65791}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00953, "memory": 5763, "data_time": 0.36381, "loss_cls": 0.31724, "loss_bbox": 1.47765, "loss_dir": 0.13566, "loss": 1.93055, "grad_norm": 1.42042, "time": 1.02121}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00966, "memory": 5763, "data_time": 0.00865, "loss_cls": 0.30848, "loss_bbox": 1.42751, "loss_dir": 0.13639, "loss": 1.87237, "grad_norm": 1.37119, "time": 0.66643}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00976, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.29935, "loss_bbox": 1.39952, "loss_dir": 0.13528, "loss": 1.83415, "grad_norm": 1.42268, "time": 0.65976}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00985, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.30179, "loss_bbox": 1.46535, "loss_dir": 0.13543, "loss": 1.90258, "grad_norm": 1.40453, "time": 0.65665}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00991, "memory": 5764, "data_time": 0.00863, "loss_cls": 0.29803, "loss_bbox": 1.40479, "loss_dir": 0.1355, "loss": 1.83832, "grad_norm": 1.35201, "time": 0.66132}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00996, "memory": 5764, "data_time": 0.00859, "loss_cls": 0.29176, "loss_bbox": 1.40685, "loss_dir": 0.13546, "loss": 1.83408, "grad_norm": 1.34554, "time": 0.6555}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00999, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.29788, "loss_bbox": 1.50301, "loss_dir": 0.13532, "loss": 1.93622, "grad_norm": 1.36803, "time": 0.65928}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.01, "memory": 5764, "data_time": 0.00858, "loss_cls": 0.28563, "loss_bbox": 1.40025, "loss_dir": 0.13612, "loss": 1.822, "grad_norm": 1.17148, "time": 0.65847}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.01, "memory": 5764, "data_time": 0.00863, "loss_cls": 0.28351, "loss_bbox": 1.3422, "loss_dir": 0.13463, "loss": 1.76034, "grad_norm": 1.2287, "time": 0.65602}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00998, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.27719, "loss_bbox": 1.39176, "loss_dir": 0.13417, "loss": 1.80313, "grad_norm": 1.29211, "time": 0.66001}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.00996, "memory": 5764, "data_time": 0.00859, "loss_cls": 0.2836, "loss_bbox": 1.38706, "loss_dir": 0.135, "loss": 1.80566, "grad_norm": 1.30393, "time": 0.66027}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.00992, "memory": 5764, "data_time": 0.00863, "loss_cls": 0.28353, "loss_bbox": 1.37715, "loss_dir": 0.13577, "loss": 1.79645, "grad_norm": 1.25943, "time": 0.66218}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.00988, "memory": 5764, "data_time": 0.00858, "loss_cls": 0.28155, "loss_bbox": 1.34356, "loss_dir": 0.1351, "loss": 1.76021, "grad_norm": 1.20627, "time": 0.65819}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00983, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.2858, "loss_bbox": 1.32075, "loss_dir": 0.13534, "loss": 1.74189, "grad_norm": 1.22775, "time": 0.6603}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.00977, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.27574, "loss_bbox": 1.35684, "loss_dir": 0.13509, "loss": 1.76767, "grad_norm": 1.16999, "time": 0.65595}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.0097, "memory": 5764, "data_time": 0.00858, "loss_cls": 0.27727, "loss_bbox": 1.31211, "loss_dir": 0.13584, "loss": 1.72522, "grad_norm": 1.05346, "time": 0.6503}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.00962, "memory": 5764, "data_time": 0.00865, "loss_cls": 0.2819, "loss_bbox": 1.32591, "loss_dir": 0.13613, "loss": 1.74394, "grad_norm": 1.1058, "time": 0.65914}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.00953, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.27409, "loss_bbox": 1.36987, "loss_dir": 0.13407, "loss": 1.77803, "grad_norm": 1.19094, "time": 0.66392}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.00943, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.29003, "loss_bbox": 1.35162, "loss_dir": 0.1347, "loss": 1.77634, "grad_norm": 1.16504, "time": 0.6594}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.00933, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.26857, "loss_bbox": 1.31885, "loss_dir": 0.13501, "loss": 1.72242, "grad_norm": 1.02984, "time": 0.65096}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.00921, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.26833, "loss_bbox": 1.32465, "loss_dir": 0.13505, "loss": 1.72803, "grad_norm": 1.07208, "time": 0.66694}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00909, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.27162, "loss_bbox": 1.30875, "loss_dir": 0.13462, "loss": 1.71499, "grad_norm": 1.15352, "time": 0.6601}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.00896, "memory": 5764, "data_time": 0.00864, "loss_cls": 0.26666, "loss_bbox": 1.26652, "loss_dir": 0.13479, "loss": 1.66797, "grad_norm": 1.14414, "time": 0.66256}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00882, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.26326, "loss_bbox": 1.24533, "loss_dir": 0.13434, "loss": 1.64293, "grad_norm": 1.11734, "time": 0.66482}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.00868, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.26722, "loss_bbox": 1.27695, "loss_dir": 0.13523, "loss": 1.6794, "grad_norm": 1.10516, "time": 0.66272}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.00853, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.26391, "loss_bbox": 1.2719, "loss_dir": 0.1348, "loss": 1.67061, "grad_norm": 1.05075, "time": 0.6693}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.00837, "memory": 5764, "data_time": 0.00859, "loss_cls": 0.26491, "loss_bbox": 1.26393, "loss_dir": 0.13567, "loss": 1.66451, "grad_norm": 1.13636, "time": 0.65894}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.00821, "memory": 5764, "data_time": 0.00865, "loss_cls": 0.25634, "loss_bbox": 1.23063, "loss_dir": 0.13454, "loss": 1.62151, "grad_norm": 1.06093, "time": 0.6586}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.00803, "memory": 5764, "data_time": 0.00863, "loss_cls": 0.25592, "loss_bbox": 1.25284, "loss_dir": 0.13417, "loss": 1.64293, "grad_norm": 1.04062, "time": 0.65309}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00786, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.26006, "loss_bbox": 1.24, "loss_dir": 0.13339, "loss": 1.63345, "grad_norm": 0.99879, "time": 0.66237}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.00768, "memory": 5764, "data_time": 0.00863, "loss_cls": 0.25203, "loss_bbox": 1.26323, "loss_dir": 0.13494, "loss": 1.6502, "grad_norm": 1.0287, "time": 0.65982}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.00749, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.2522, "loss_bbox": 1.21813, "loss_dir": 0.13381, "loss": 1.60415, "grad_norm": 1.02494, "time": 0.65991}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.0073, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.25548, "loss_bbox": 1.22199, "loss_dir": 0.13338, "loss": 1.61085, "grad_norm": 1.01021, "time": 0.65856}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.0071, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.25738, "loss_bbox": 1.17862, "loss_dir": 0.13471, "loss": 1.5707, "grad_norm": 1.053, "time": 0.67025}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.0069, "memory": 5764, "data_time": 0.00868, "loss_cls": 0.26471, "loss_bbox": 1.22148, "loss_dir": 0.13441, "loss": 1.6206, "grad_norm": 1.02805, "time": 0.66136}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.0067, "memory": 5764, "data_time": 0.00863, "loss_cls": 0.25392, "loss_bbox": 1.23882, "loss_dir": 0.13411, "loss": 1.62685, "grad_norm": 1.06647, "time": 0.66872}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.00649, "memory": 5764, "data_time": 0.00861, "loss_cls": 0.24727, "loss_bbox": 1.23667, "loss_dir": 0.13422, "loss": 1.61815, "grad_norm": 1.02736, "time": 0.66428}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.00628, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.24835, "loss_bbox": 1.21217, "loss_dir": 0.13447, "loss": 1.59499, "grad_norm": 1.09543, "time": 0.65885}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.00607, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.24322, "loss_bbox": 1.19152, "loss_dir": 0.13487, "loss": 1.56961, "grad_norm": 0.94737, "time": 0.65451}
{"mode": "val", "epoch": 2, "iter": 1497, "lr": 0.00587, "KITTI/Pedestrian_3D_AP11_easy_strict": 32.30404, "KITTI/Pedestrian_BEV_AP11_easy_strict": 40.01252, "KITTI/Pedestrian_2D_AP11_easy_strict": 48.82645, "KITTI/Pedestrian_3D_AP11_moderate_strict": 29.64375, "KITTI/Pedestrian_BEV_AP11_moderate_strict": 37.18411, "KITTI/Pedestrian_2D_AP11_moderate_strict": 43.66957, "KITTI/Pedestrian_3D_AP11_hard_strict": 27.19935, "KITTI/Pedestrian_BEV_AP11_hard_strict": 33.85821, "KITTI/Pedestrian_2D_AP11_hard_strict": 40.83919, "KITTI/Pedestrian_3D_AP11_easy_loose": 51.97276, "KITTI/Pedestrian_BEV_AP11_easy_loose": 51.97337, "KITTI/Pedestrian_2D_AP11_easy_loose": 48.82645, "KITTI/Pedestrian_3D_AP11_moderate_loose": 47.38961, "KITTI/Pedestrian_BEV_AP11_moderate_loose": 47.39214, "KITTI/Pedestrian_2D_AP11_moderate_loose": 43.66957, "KITTI/Pedestrian_3D_AP11_hard_loose": 44.09393, "KITTI/Pedestrian_BEV_AP11_hard_loose": 44.11495, "KITTI/Pedestrian_2D_AP11_hard_loose": 40.83919, "KITTI/Cyclist_3D_AP11_easy_strict": 60.80372, "KITTI/Cyclist_BEV_AP11_easy_strict": 61.94336, "KITTI/Cyclist_2D_AP11_easy_strict": 63.17449, "KITTI/Cyclist_3D_AP11_moderate_strict": 46.86025, "KITTI/Cyclist_BEV_AP11_moderate_strict": 49.36207, "KITTI/Cyclist_2D_AP11_moderate_strict": 53.57656, "KITTI/Cyclist_3D_AP11_hard_strict": 44.00275, "KITTI/Cyclist_BEV_AP11_hard_strict": 46.96449, "KITTI/Cyclist_2D_AP11_hard_strict": 51.2485, "KITTI/Cyclist_3D_AP11_easy_loose": 62.55494, "KITTI/Cyclist_BEV_AP11_easy_loose": 62.94291, "KITTI/Cyclist_2D_AP11_easy_loose": 63.17449, "KITTI/Cyclist_3D_AP11_moderate_loose": 51.27876, "KITTI/Cyclist_BEV_AP11_moderate_loose": 51.27876, "KITTI/Cyclist_2D_AP11_moderate_loose": 53.57656, "KITTI/Cyclist_3D_AP11_hard_loose": 48.72514, "KITTI/Cyclist_BEV_AP11_hard_loose": 48.73672, "KITTI/Cyclist_2D_AP11_hard_loose": 51.2485, "KITTI/Car_3D_AP11_easy_strict": 38.89265, "KITTI/Car_BEV_AP11_easy_strict": 71.78496, "KITTI/Car_2D_AP11_easy_strict": 72.04771, "KITTI/Car_3D_AP11_moderate_strict": 31.18539, "KITTI/Car_BEV_AP11_moderate_strict": 55.57585, "KITTI/Car_2D_AP11_moderate_strict": 56.55378, "KITTI/Car_3D_AP11_hard_strict": 27.34719, "KITTI/Car_BEV_AP11_hard_strict": 52.69684, "KITTI/Car_2D_AP11_hard_strict": 55.30578, "KITTI/Car_3D_AP11_easy_loose": 88.35059, "KITTI/Car_BEV_AP11_easy_loose": 89.74313, "KITTI/Car_2D_AP11_easy_loose": 72.04771, "KITTI/Car_3D_AP11_moderate_loose": 76.16181, "KITTI/Car_BEV_AP11_moderate_loose": 79.37058, "KITTI/Car_2D_AP11_moderate_loose": 56.55378, "KITTI/Car_3D_AP11_hard_loose": 69.18503, "KITTI/Car_BEV_AP11_hard_loose": 77.22423, "KITTI/Car_2D_AP11_hard_loose": 55.30578, "KITTI/Overall_3D_AP11_easy": 44.00014, "KITTI/Overall_BEV_AP11_easy": 57.91361, "KITTI/Overall_2D_AP11_easy": 61.34955, "KITTI/Overall_3D_AP11_moderate": 35.89646, "KITTI/Overall_BEV_AP11_moderate": 47.37401, "KITTI/Overall_2D_AP11_moderate": 51.26664, "KITTI/Overall_3D_AP11_hard": 32.84976, "KITTI/Overall_BEV_AP11_hard": 44.50651, "KITTI/Overall_2D_AP11_hard": 49.13116, "KITTI/Pedestrian_3D_AP40_easy_strict": 28.75553, "KITTI/Pedestrian_BEV_AP40_easy_strict": 37.66111, "KITTI/Pedestrian_2D_AP40_easy_strict": 47.37216, "KITTI/Pedestrian_3D_AP40_moderate_strict": 25.1289, "KITTI/Pedestrian_BEV_AP40_moderate_strict": 34.10277, "KITTI/Pedestrian_2D_AP40_moderate_strict": 42.26945, "KITTI/Pedestrian_3D_AP40_hard_strict": 22.44832, "KITTI/Pedestrian_BEV_AP40_hard_strict": 30.76038, "KITTI/Pedestrian_2D_AP40_hard_strict": 38.22935, "KITTI/Pedestrian_3D_AP40_easy_loose": 51.19403, "KITTI/Pedestrian_BEV_AP40_easy_loose": 51.19527, "KITTI/Pedestrian_2D_AP40_easy_loose": 47.37216, "KITTI/Pedestrian_3D_AP40_moderate_loose": 46.01228, "KITTI/Pedestrian_BEV_AP40_moderate_loose": 46.03195, "KITTI/Pedestrian_2D_AP40_moderate_loose": 42.26945, "KITTI/Pedestrian_3D_AP40_hard_loose": 41.79378, "KITTI/Pedestrian_BEV_AP40_hard_loose": 41.82844, "KITTI/Pedestrian_2D_AP40_hard_loose": 38.22935, "KITTI/Cyclist_3D_AP40_easy_strict": 59.59401, "KITTI/Cyclist_BEV_AP40_easy_strict": 61.13677, "KITTI/Cyclist_2D_AP40_easy_strict": 63.31106, "KITTI/Cyclist_3D_AP40_moderate_strict": 45.80849, "KITTI/Cyclist_BEV_AP40_moderate_strict": 48.76774, "KITTI/Cyclist_2D_AP40_moderate_strict": 53.28952, "KITTI/Cyclist_3D_AP40_hard_strict": 42.18812, "KITTI/Cyclist_BEV_AP40_hard_strict": 45.21805, "KITTI/Cyclist_2D_AP40_hard_strict": 49.92861, "KITTI/Cyclist_3D_AP40_easy_loose": 62.25239, "KITTI/Cyclist_BEV_AP40_easy_loose": 62.35909, "KITTI/Cyclist_2D_AP40_easy_loose": 63.31106, "KITTI/Cyclist_3D_AP40_moderate_loose": 50.85039, "KITTI/Cyclist_BEV_AP40_moderate_loose": 50.95457, "KITTI/Cyclist_2D_AP40_moderate_loose": 53.28952, "KITTI/Cyclist_3D_AP40_hard_loose": 47.16953, "KITTI/Cyclist_BEV_AP40_hard_loose": 47.17298, "KITTI/Cyclist_2D_AP40_hard_loose": 49.92861, "KITTI/Car_3D_AP40_easy_strict": 36.6223, "KITTI/Car_BEV_AP40_easy_strict": 71.53786, "KITTI/Car_2D_AP40_easy_strict": 71.70846, "KITTI/Car_3D_AP40_moderate_strict": 26.9008, "KITTI/Car_BEV_AP40_moderate_strict": 55.00784, "KITTI/Car_2D_AP40_moderate_strict": 57.43253, "KITTI/Car_3D_AP40_hard_strict": 24.13371, "KITTI/Car_BEV_AP40_hard_strict": 50.28405, "KITTI/Car_2D_AP40_hard_strict": 54.75951, "KITTI/Car_3D_AP40_easy_loose": 89.53646, "KITTI/Car_BEV_AP40_easy_loose": 93.1622, "KITTI/Car_2D_AP40_easy_loose": 71.70846, "KITTI/Car_3D_AP40_moderate_loose": 76.92723, "KITTI/Car_BEV_AP40_moderate_loose": 83.25279, "KITTI/Car_2D_AP40_moderate_loose": 57.43253, "KITTI/Car_3D_AP40_hard_loose": 70.36994, "KITTI/Car_BEV_AP40_hard_loose": 78.19296, "KITTI/Car_2D_AP40_hard_loose": 54.75951, "KITTI/Overall_3D_AP40_easy": 41.65728, "KITTI/Overall_BEV_AP40_easy": 56.77858, "KITTI/Overall_2D_AP40_easy": 60.79723, "KITTI/Overall_3D_AP40_moderate": 32.61273, "KITTI/Overall_BEV_AP40_moderate": 45.95945, "KITTI/Overall_2D_AP40_moderate": 50.99717, "KITTI/Overall_3D_AP40_hard": 29.59005, "KITTI/Overall_BEV_AP40_hard": 42.08749, "KITTI/Overall_2D_AP40_hard": 47.63915}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00566, "memory": 5764, "data_time": 0.34686, "loss_cls": 0.24843, "loss_bbox": 1.17801, "loss_dir": 0.1335, "loss": 1.55995, "grad_norm": 1.05328, "time": 1.00945}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00544, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.2411, "loss_bbox": 1.13665, "loss_dir": 0.13337, "loss": 1.51113, "grad_norm": 1.05647, "time": 0.65779}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.00522, "memory": 5764, "data_time": 0.00865, "loss_cls": 0.23684, "loss_bbox": 1.14168, "loss_dir": 0.13384, "loss": 1.51236, "grad_norm": 1.00801, "time": 0.65864}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.005, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.24204, "loss_bbox": 1.18591, "loss_dir": 0.13341, "loss": 1.56136, "grad_norm": 1.04616, "time": 0.65261}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.00478, "memory": 5764, "data_time": 0.00865, "loss_cls": 0.23181, "loss_bbox": 1.16835, "loss_dir": 0.13225, "loss": 1.53242, "grad_norm": 0.97431, "time": 0.65953}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.00457, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.23206, "loss_bbox": 1.14184, "loss_dir": 0.13284, "loss": 1.50674, "grad_norm": 0.88166, "time": 0.65357}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.00435, "memory": 5764, "data_time": 0.0086, "loss_cls": 0.2327, "loss_bbox": 1.14291, "loss_dir": 0.13353, "loss": 1.50914, "grad_norm": 0.94764, "time": 0.65269}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00413, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.23321, "loss_bbox": 1.09936, "loss_dir": 0.13445, "loss": 1.46703, "grad_norm": 0.85029, "time": 0.65488}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00392, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.23498, "loss_bbox": 1.13047, "loss_dir": 0.13298, "loss": 1.49844, "grad_norm": 0.94618, "time": 0.65605}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.0037, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.24027, "loss_bbox": 1.13118, "loss_dir": 0.13252, "loss": 1.50396, "grad_norm": 0.98793, "time": 0.66196}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00349, "memory": 5764, "data_time": 0.00866, "loss_cls": 0.2299, "loss_bbox": 1.10358, "loss_dir": 0.13371, "loss": 1.46719, "grad_norm": 0.96068, "time": 0.65705}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.00329, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.22536, "loss_bbox": 1.09844, "loss_dir": 0.13378, "loss": 1.45759, "grad_norm": 0.9174, "time": 0.65839}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.00308, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.22508, "loss_bbox": 1.07737, "loss_dir": 0.13345, "loss": 1.43589, "grad_norm": 0.86158, "time": 0.65215}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.00288, "memory": 5764, "data_time": 0.00866, "loss_cls": 0.22588, "loss_bbox": 1.05766, "loss_dir": 0.1321, "loss": 1.41564, "grad_norm": 0.81469, "time": 0.65365}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.00269, "memory": 5764, "data_time": 0.00865, "loss_cls": 0.23249, "loss_bbox": 1.08873, "loss_dir": 0.13322, "loss": 1.45445, "grad_norm": 0.9392, "time": 0.64664}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.0025, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.23098, "loss_bbox": 1.08098, "loss_dir": 0.13218, "loss": 1.44413, "grad_norm": 0.89435, "time": 0.65482}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.00231, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.23066, "loss_bbox": 1.07595, "loss_dir": 0.13288, "loss": 1.43949, "grad_norm": 0.9128, "time": 0.64647}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.00213, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.22675, "loss_bbox": 1.09111, "loss_dir": 0.13129, "loss": 1.44914, "grad_norm": 0.92079, "time": 0.65476}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.00195, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.22523, "loss_bbox": 1.06009, "loss_dir": 0.13321, "loss": 1.41854, "grad_norm": 0.82537, "time": 0.65396}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.00178, "memory": 5764, "data_time": 0.00864, "loss_cls": 0.22219, "loss_bbox": 1.03516, "loss_dir": 0.13223, "loss": 1.38957, "grad_norm": 0.89543, "time": 0.65369}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.00162, "memory": 5764, "data_time": 0.00864, "loss_cls": 0.22295, "loss_bbox": 1.03731, "loss_dir": 0.13302, "loss": 1.39328, "grad_norm": 0.84145, "time": 0.65527}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.00146, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.2267, "loss_bbox": 1.05251, "loss_dir": 0.13193, "loss": 1.41114, "grad_norm": 0.92456, "time": 0.64783}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.00131, "memory": 5764, "data_time": 0.00866, "loss_cls": 0.22274, "loss_bbox": 1.04718, "loss_dir": 0.13213, "loss": 1.40206, "grad_norm": 0.8707, "time": 0.6543}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.00116, "memory": 5764, "data_time": 0.00868, "loss_cls": 0.22014, "loss_bbox": 1.01606, "loss_dir": 0.13222, "loss": 1.36841, "grad_norm": 0.853, "time": 0.66042}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 0.00103, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.2163, "loss_bbox": 1.04072, "loss_dir": 0.13207, "loss": 1.38909, "grad_norm": 0.84572, "time": 0.65063}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.0009, "memory": 5764, "data_time": 0.00862, "loss_cls": 0.22238, "loss_bbox": 1.06011, "loss_dir": 0.13288, "loss": 1.41536, "grad_norm": 0.86774, "time": 0.65974}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 0.00078, "memory": 5764, "data_time": 0.00865, "loss_cls": 0.2198, "loss_bbox": 1.01779, "loss_dir": 0.13189, "loss": 1.36949, "grad_norm": 0.77508, "time": 0.66137}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.00066, "memory": 5764, "data_time": 0.00868, "loss_cls": 0.21979, "loss_bbox": 1.06042, "loss_dir": 0.13236, "loss": 1.41257, "grad_norm": 0.83628, "time": 0.65621}
{"mode": "train", "epoch": 3, "iter": 1450, "lr": 0.00056, "memory": 5764, "data_time": 0.00872, "loss_cls": 0.21614, "loss_bbox": 1.02197, "loss_dir": 0.13375, "loss": 1.37187, "grad_norm": 0.78366, "time": 0.65119}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 0.00046, "memory": 5764, "data_time": 0.00868, "loss_cls": 0.21775, "loss_bbox": 1.04594, "loss_dir": 0.13199, "loss": 1.39568, "grad_norm": 0.76711, "time": 0.65809}
{"mode": "train", "epoch": 3, "iter": 1550, "lr": 0.00038, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.21339, "loss_bbox": 1.00169, "loss_dir": 0.13214, "loss": 1.34722, "grad_norm": 0.76345, "time": 0.65403}
{"mode": "train", "epoch": 3, "iter": 1600, "lr": 0.0003, "memory": 5764, "data_time": 0.00864, "loss_cls": 0.21972, "loss_bbox": 1.02369, "loss_dir": 0.13109, "loss": 1.37449, "grad_norm": 0.77301, "time": 0.65268}
{"mode": "train", "epoch": 3, "iter": 1650, "lr": 0.00023, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.2204, "loss_bbox": 1.01313, "loss_dir": 0.13213, "loss": 1.36566, "grad_norm": 0.7839, "time": 0.65571}
{"mode": "train", "epoch": 3, "iter": 1700, "lr": 0.00017, "memory": 5764, "data_time": 0.00867, "loss_cls": 0.21812, "loss_bbox": 1.02099, "loss_dir": 0.13182, "loss": 1.37093, "grad_norm": 0.83038, "time": 0.66249}
{"mode": "train", "epoch": 3, "iter": 1750, "lr": 0.00012, "memory": 5764, "data_time": 0.00874, "loss_cls": 0.21518, "loss_bbox": 0.98603, "loss_dir": 0.13084, "loss": 1.33205, "grad_norm": 0.75505, "time": 0.65736}
{"mode": "train", "epoch": 3, "iter": 1800, "lr": 7e-05, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.21372, "loss_bbox": 1.00495, "loss_dir": 0.13277, "loss": 1.35144, "grad_norm": 0.74343, "time": 0.65152}
{"mode": "train", "epoch": 3, "iter": 1850, "lr": 4e-05, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.21754, "loss_bbox": 0.99277, "loss_dir": 0.1322, "loss": 1.34252, "grad_norm": 0.75527, "time": 0.65571}
{"mode": "train", "epoch": 3, "iter": 1900, "lr": 2e-05, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.21827, "loss_bbox": 0.99744, "loss_dir": 0.13401, "loss": 1.34972, "grad_norm": 0.76398, "time": 0.65876}
{"mode": "train", "epoch": 3, "iter": 1950, "lr": 0.0, "memory": 5764, "data_time": 0.00869, "loss_cls": 0.21246, "loss_bbox": 1.01391, "loss_dir": 0.13269, "loss": 1.35906, "grad_norm": 0.80541, "time": 0.6504}
